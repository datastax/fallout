apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: dnschaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: DNSChaos
    listKind: DNSChaosList
    plural: dnschaos
    singular: dnschaos
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: DNSChaos is the Schema for the networkchaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a pod chaos experiment
          properties:
            action:
              description: 'Action defines the specific DNS chaos action. Supported
                action: error, random Default action: error'
              enum:
              - error
              - random
              type: string
            duration:
              description: Duration represents the duration of the chaos action
              type: string
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            scheduler:
              description: Scheduler defines some schedule rules to control the running
                time of the chaos experiment about network.
              properties:
                cron:
                  description: "Cron defines a cron job rule. \n Some rule examples:
                    \"0 30 * * * *\" means to \"Every hour on the half hour\" \"@hourly\"
                    \     means to \"Every hour\" \"@every 1h30m\" means to \"Every
                    hour thirty\" \n More rule info: https://godoc.org/github.com/robfig/cron"
                  type: string
              required:
              - cron
              type: object
            scope:
              description: 'Action defines the scope which the DNS chaos works. Supported
                action: outer, inner, all Default action: outer'
              enum:
              - outer
              - inner
              - all
              type: string
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. If `RandomMaxPercentPodMod`, provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
          required:
          - action
          - mode
          - scope
          - selector
          type: object
        status:
          description: Most recently observed status of the chaos experiment about
            pods
          properties:
            experiment:
              description: Experiment records the last experiment state.
              properties:
                duration:
                  type: string
                endTime:
                  format: date-time
                  type: string
                phase:
                  description: ExperimentPhase is the current status of chaos experiment.
                  type: string
                podRecords:
                  items:
                    description: PodStatus represents information about the status
                      of a pod in chaos experiment.
                    properties:
                      action:
                        type: string
                      hostIP:
                        type: string
                      message:
                        description: A brief CamelCase message indicating details
                          about the chaos action. e.g. "delete this pod" or "pause
                          this pod duration 5m"
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      podIP:
                        type: string
                    required:
                    - action
                    - hostIP
                    - name
                    - namespace
                    - podIP
                    type: object
                  type: array
                reason:
                  type: string
                startTime:
                  format: date-time
                  type: string
              type: object
            failedMessage:
              type: string
            phase:
              description: Phase is the chaos status.
              type: string
            reason:
              type: string
            scheduler:
              description: ScheduleStatus is the current status of chaos scheduler.
              properties:
                nextRecover:
                  description: Next time when this action will be recovered
                  format: date-time
                  type: string
                nextStart:
                  description: Next time when this action will be applied again
                  format: date-time
                  type: string
              type: object
          required:
          - experiment
          - phase
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: httpchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: HTTPChaos
    listKind: HTTPChaosList
    plural: httpchaos
    singular: httpchaos
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: HTTPChaos is the Schema for the HTTPchaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            action:
              description: 'Action defines the specific pod chaos action. Supported
                action: delay | abort | mixed Default action: delay'
              enum:
              - delay
              - abort
              - mixed
              type: string
            duration:
              description: Duration represents the duration of the chaos action. It
                is required when the action is `PodFailureAction`. A duration string
                is a possibly signed sequence of decimal numbers, each with optional
                fraction and a unit suffix, such as "300ms", "-1.5h" or "2h45m". Valid
                time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
              type: string
            headers:
              description: Specifies how the header match will be performed to route
                the request.
              items:
                properties:
                  exact_match:
                    type: string
                  invert_match:
                    type: string
                  name:
                    type: string
                  prefix_match:
                    type: string
                  present_match:
                    type: string
                  range_match:
                    type: string
                  regex_match:
                    type: string
                  safe_regex_match:
                    type: string
                  suffix_match:
                    type: string
                required:
                - name
                type: object
              type: array
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            percent:
              description: 'Percent defines the percentage of injection errors and
                provides a number from 0-100. default: 100.'
              type: string
            scheduler:
              description: Scheduler defines some schedule rules to control the running
                time of the chaos experiment about pods.
              properties:
                cron:
                  description: "Cron defines a cron job rule. \n Some rule examples:
                    \"0 30 * * * *\" means to \"Every hour on the half hour\" \"@hourly\"
                    \     means to \"Every hour\" \"@every 1h30m\" means to \"Every
                    hour thirty\" \n More rule info: https://godoc.org/github.com/robfig/cron"
                  type: string
              required:
              - cron
              type: object
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
          required:
          - action
          - mode
          - selector
          type: object
        status:
          properties:
            experiment:
              description: Experiment records the last experiment state.
              properties:
                duration:
                  type: string
                endTime:
                  format: date-time
                  type: string
                phase:
                  description: ExperimentPhase is the current status of chaos experiment.
                  type: string
                podRecords:
                  items:
                    description: PodStatus represents information about the status
                      of a pod in chaos experiment.
                    properties:
                      action:
                        type: string
                      hostIP:
                        type: string
                      message:
                        description: A brief CamelCase message indicating details
                          about the chaos action. e.g. "delete this pod" or "pause
                          this pod duration 5m"
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      podIP:
                        type: string
                    required:
                    - action
                    - hostIP
                    - name
                    - namespace
                    - podIP
                    type: object
                  type: array
                reason:
                  type: string
                startTime:
                  format: date-time
                  type: string
              type: object
            failedMessage:
              type: string
            phase:
              description: Phase is the chaos status.
              type: string
            reason:
              type: string
            scheduler:
              description: ScheduleStatus is the current status of chaos scheduler.
              properties:
                nextRecover:
                  description: Next time when this action will be recovered
                  format: date-time
                  type: string
                nextStart:
                  description: Next time when this action will be applied again
                  format: date-time
                  type: string
              type: object
          required:
          - experiment
          - phase
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: iochaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: IoChaos
    listKind: IoChaosList
    plural: iochaos
    singular: iochaos
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: IoChaos is the Schema for the iochaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: IoChaosSpec defines the desired state of IoChaos
          properties:
            action:
              description: 'Action defines the specific pod chaos action. Supported
                action: latency / fault / attrOverride'
              enum:
              - latency
              - fault
              - attrOverride
              type: string
            attr:
              description: Attr defines the overrided attribution
              properties:
                atime:
                  description: Timespec represents a time
                  properties:
                    nsec:
                      format: int64
                      type: integer
                    sec:
                      format: int64
                      type: integer
                  required:
                  - nsec
                  - sec
                  type: object
                blocks:
                  format: int64
                  type: integer
                ctime:
                  description: Timespec represents a time
                  properties:
                    nsec:
                      format: int64
                      type: integer
                    sec:
                      format: int64
                      type: integer
                  required:
                  - nsec
                  - sec
                  type: object
                gid:
                  format: int32
                  type: integer
                ino:
                  format: int64
                  type: integer
                kind:
                  description: FileType represents type of a file
                  type: string
                mtime:
                  description: Timespec represents a time
                  properties:
                    nsec:
                      format: int64
                      type: integer
                    sec:
                      format: int64
                      type: integer
                  required:
                  - nsec
                  - sec
                  type: object
                nlink:
                  format: int32
                  type: integer
                perm:
                  type: integer
                rdev:
                  format: int32
                  type: integer
                size:
                  format: int64
                  type: integer
                uid:
                  format: int32
                  type: integer
              type: object
            delay:
              description: Delay defines the value of I/O chaos action delay. A delay
                string is a possibly signed sequence of decimal numbers, each with
                optional fraction and a unit suffix, such as "300ms". Valid time units
                are "ns", "us" (or "µs"), "ms", "s", "m", "h".
              type: string
            duration:
              description: Duration represents the duration of the chaos action. It
                is required when the action is `PodFailureAction`. A duration string
                is a possibly signed sequence of decimal numbers, each with optional
                fraction and a unit suffix, such as "300ms", "-1.5h" or "2h45m". Valid
                time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
              type: string
            errno:
              description: 'Errno defines the error code that returned by I/O action.
                refer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html'
              format: int32
              type: integer
            methods:
              description: 'Methods defines the I/O methods for injecting I/O chaos
                action. default: all I/O methods.'
              items:
                type: string
              type: array
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            path:
              description: Path defines the path of files for injecting I/O chaos
                action.
              type: string
            percent:
              description: 'Percent defines the percentage of injection errors and
                provides a number from 0-100. default: 100.'
              type: integer
            scheduler:
              description: Scheduler defines some schedule rules to control the running
                time of the chaos experiment about pods.
              properties:
                cron:
                  description: "Cron defines a cron job rule. \n Some rule examples:
                    \"0 30 * * * *\" means to \"Every hour on the half hour\" \"@hourly\"
                    \     means to \"Every hour\" \"@every 1h30m\" means to \"Every
                    hour thirty\" \n More rule info: https://godoc.org/github.com/robfig/cron"
                  type: string
              required:
              - cron
              type: object
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
            volumePath:
              description: VolumePath represents the mount path of injected volume
              type: string
          required:
          - action
          - mode
          - selector
          - volumePath
          type: object
        status:
          description: IoChaosStatus defines the observed state of IoChaos
          properties:
            experiment:
              description: Experiment records the last experiment state.
              properties:
                duration:
                  type: string
                endTime:
                  format: date-time
                  type: string
                phase:
                  description: ExperimentPhase is the current status of chaos experiment.
                  type: string
                podRecords:
                  items:
                    description: PodStatus represents information about the status
                      of a pod in chaos experiment.
                    properties:
                      action:
                        type: string
                      hostIP:
                        type: string
                      message:
                        description: A brief CamelCase message indicating details
                          about the chaos action. e.g. "delete this pod" or "pause
                          this pod duration 5m"
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      podIP:
                        type: string
                    required:
                    - action
                    - hostIP
                    - name
                    - namespace
                    - podIP
                    type: object
                  type: array
                reason:
                  type: string
                startTime:
                  format: date-time
                  type: string
              type: object
            failedMessage:
              type: string
            phase:
              description: Phase is the chaos status.
              type: string
            reason:
              type: string
            scheduler:
              description: ScheduleStatus is the current status of chaos scheduler.
              properties:
                nextRecover:
                  description: Next time when this action will be recovered
                  format: date-time
                  type: string
                nextStart:
                  description: Next time when this action will be applied again
                  format: date-time
                  type: string
              type: object
          required:
          - experiment
          - phase
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: kernelchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: KernelChaos
    listKind: KernelChaosList
    plural: kernelchaos
    singular: kernelchaos
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: KernelChaos is the Schema for the kernelchaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a kernel chaos experiment
          properties:
            duration:
              description: Duration represents the duration of the chaos action
              type: string
            failKernRequest:
              description: FailKernRequest defines the request of kernel injection
              properties:
                callchain:
                  description: 'Callchain indicate a special call chain, such as:     ext4_mount       ->
                    mount_subtree          -> ...             -> should_failslab With
                    an optional set of predicates and an optional set of parameters,
                    which used with predicates. You can read call chan and predicate
                    examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples
                    to learn more. If no special call chain, just keep Callchain empty,
                    which means it will fail at any call chain with slab alloc (eg:
                    kmalloc).'
                  items:
                    description: Frame defines the function signature and predicate
                      in function's body
                    properties:
                      funcname:
                        description: Funcname can be find from kernel source or `/proc/kallsyms`,
                          such as `ext4_mount`
                        type: string
                      parameters:
                        description: Parameters is used with predicate, for example,
                          if you want to inject slab error in `d_alloc_parallel(struct
                          dentry *parent, const struct qstr *name)` with a special
                          name `bananas`, you need to set it to `struct dentry *parent,
                          const struct qstr *name` otherwise omit it.
                        type: string
                      predicate:
                        description: Predicate will access the arguments of this Frame,
                          example with Parameters's, you can set it to `STRNCMP(name->name,
                          "bananas", 8)` to make inject only with it, or omit it to
                          inject for all d_alloc_parallel call chain.
                        type: string
                    type: object
                  type: array
                failtype:
                  description: 'FailType indicates what to fail, can be set to ''0''
                    / ''1'' / ''2'' If `0`, indicates slab to fail (should_failslab)
                    If `1`, indicates alloc_page to fail (should_fail_alloc_page)
                    If `2`, indicates bio to fail (should_fail_bio) You can read:   1.
                    https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html   2.
                    http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt
                    to learn more'
                  format: int32
                  maximum: 2
                  minimum: 0
                  type: integer
                headers:
                  description: 'Headers indicates the appropriate kernel headers you
                    need. Eg: "linux/mmzone.h", "linux/blkdev.h" and so on'
                  items:
                    type: string
                  type: array
                probability:
                  description: Probability indicates the fails with probability. If
                    you want 1%, please set this field with 1.
                  format: int32
                  maximum: 100
                  minimum: 0
                  type: integer
                times:
                  description: Times indicates the max times of fails.
                  format: int32
                  minimum: 0
                  type: integer
              required:
              - failtype
              type: object
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            scheduler:
              description: Scheduler defines some schedule rules to control the running
                time of the chaos experiment about time.
              properties:
                cron:
                  description: "Cron defines a cron job rule. \n Some rule examples:
                    \"0 30 * * * *\" means to \"Every hour on the half hour\" \"@hourly\"
                    \     means to \"Every hour\" \"@every 1h30m\" means to \"Every
                    hour thirty\" \n More rule info: https://godoc.org/github.com/robfig/cron"
                  type: string
              required:
              - cron
              type: object
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. If `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
          required:
          - failKernRequest
          - mode
          - selector
          type: object
        status:
          description: Most recently observed status of the kernel chaos experiment
          properties:
            experiment:
              description: Experiment records the last experiment state.
              properties:
                duration:
                  type: string
                endTime:
                  format: date-time
                  type: string
                phase:
                  description: ExperimentPhase is the current status of chaos experiment.
                  type: string
                podRecords:
                  items:
                    description: PodStatus represents information about the status
                      of a pod in chaos experiment.
                    properties:
                      action:
                        type: string
                      hostIP:
                        type: string
                      message:
                        description: A brief CamelCase message indicating details
                          about the chaos action. e.g. "delete this pod" or "pause
                          this pod duration 5m"
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      podIP:
                        type: string
                    required:
                    - action
                    - hostIP
                    - name
                    - namespace
                    - podIP
                    type: object
                  type: array
                reason:
                  type: string
                startTime:
                  format: date-time
                  type: string
              type: object
            failedMessage:
              type: string
            phase:
              description: Phase is the chaos status.
              type: string
            reason:
              type: string
            scheduler:
              description: ScheduleStatus is the current status of chaos scheduler.
              properties:
                nextRecover:
                  description: Next time when this action will be recovered
                  format: date-time
                  type: string
                nextStart:
                  description: Next time when this action will be applied again
                  format: date-time
                  type: string
              type: object
          required:
          - experiment
          - phase
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: networkchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: NetworkChaos
    listKind: NetworkChaosList
    plural: networkchaos
    singular: networkchaos
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: NetworkChaos is the Schema for the networkchaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a pod chaos experiment
          properties:
            action:
              description: 'Action defines the specific network chaos action. Supported
                action: partition, netem, delay, loss, duplicate, corrupt Default
                action: delay'
              enum:
              - netem
              - delay
              - loss
              - duplicate
              - corrupt
              - partition
              - bandwidth
              type: string
            bandwidth:
              description: Bandwidth represents the detail about bandwidth control
                action
              properties:
                buffer:
                  description: Buffer is the maximum amount of bytes that tokens can
                    be available for instantaneously.
                  format: int32
                  minimum: 1
                  type: integer
                limit:
                  description: Limit is the number of bytes that can be queued waiting
                    for tokens to become available.
                  format: int32
                  minimum: 1
                  type: integer
                minburst:
                  description: Minburst specifies the size of the peakrate bucket.
                    For perfect accuracy, should be set to the MTU of the interface.  If
                    a peakrate is needed, but some burstiness is acceptable, this
                    size can be raised. A 3000 byte minburst allows around 3mbit/s
                    of peakrate, given 1000 byte packets.
                  format: int32
                  minimum: 0
                  type: integer
                peakrate:
                  description: Peakrate is the maximum depletion rate of the bucket.
                    The peakrate does not need to be set, it is only necessary if
                    perfect millisecond timescale shaping is required.
                  format: int64
                  minimum: 0
                  type: integer
                rate:
                  description: Rate is the speed knob. Allows bps, kbps, mbps, gbps,
                    tbps unit. bps means bytes per second.
                  type: string
              required:
              - buffer
              - limit
              - rate
              type: object
            corrupt:
              description: Corrupt represents the detail about corrupt action
              properties:
                correlation:
                  type: string
                corrupt:
                  type: string
              required:
              - correlation
              - corrupt
              type: object
            delay:
              description: Delay represents the detail about delay action
              properties:
                correlation:
                  type: string
                jitter:
                  type: string
                latency:
                  type: string
                reorder:
                  description: ReorderSpec defines details of packet reorder.
                  properties:
                    correlation:
                      type: string
                    gap:
                      type: integer
                    reorder:
                      type: string
                  required:
                  - correlation
                  - gap
                  - reorder
                  type: object
              required:
              - latency
              type: object
            direction:
              description: Direction represents the direction, this applies on netem
                and network partition action
              enum:
              - to
              - from
              - both
              - ""
              type: string
            duplicate:
              description: DuplicateSpec represents the detail about loss action
              properties:
                correlation:
                  type: string
                duplicate:
                  type: string
              required:
              - correlation
              - duplicate
              type: object
            duration:
              description: Duration represents the duration of the chaos action
              type: string
            externalTargets:
              description: ExternalTargets represents network targets outside k8s
              items:
                type: string
              type: array
            loss:
              description: Loss represents the detail about loss action
              properties:
                correlation:
                  type: string
                loss:
                  type: string
              required:
              - correlation
              - loss
              type: object
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            scheduler:
              description: Scheduler defines some schedule rules to control the running
                time of the chaos experiment about network.
              properties:
                cron:
                  description: "Cron defines a cron job rule. \n Some rule examples:
                    \"0 30 * * * *\" means to \"Every hour on the half hour\" \"@hourly\"
                    \     means to \"Every hour\" \"@every 1h30m\" means to \"Every
                    hour thirty\" \n More rule info: https://godoc.org/github.com/robfig/cron"
                  type: string
              required:
              - cron
              type: object
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            target:
              description: Target represents network target, this applies on netem
                and network partition action
              properties:
                mode:
                  description: TargetMode defines the target selector mode
                  enum:
                  - one
                  - all
                  - fixed
                  - fixed-percent
                  - random-max-percent
                  - ""
                  type: string
                selector:
                  description: TargetSelector defines the target selector
                  properties:
                    annotationSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on annotations.
                      type: object
                    fieldSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on fields.
                      type: object
                    labelSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select objects. A selector based on labels.
                      type: object
                    namespaces:
                      description: Namespaces is a set of namespace to which objects
                        belong.
                      items:
                        type: string
                      type: array
                    nodeSelectors:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to select nodes. Selector which must match a node's labels,
                        and objects must belong to these selected nodes.
                      type: object
                    nodes:
                      description: Nodes is a set of node name and objects must belong
                        to these nodes.
                      items:
                        type: string
                      type: array
                    podPhaseSelectors:
                      description: 'PodPhaseSelectors is a set of condition of a pod
                        at the current time. supported value: Pending / Running /
                        Succeeded / Failed / Unknown'
                      items:
                        type: string
                      type: array
                    pods:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Pods is a map of string keys and a set values that
                        used to select pods. The key defines the namespace which pods
                        belong, and the each values is a set of pod names.
                      type: object
                  type: object
                value:
                  description: TargetValue is required when the mode is set to `FixedPodMode`
                    / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                    provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                    provide a number from 0-100 to specify the percent of pods the
                    server can do chaos action. If `RandomMaxPercentPodMod`,  provide
                    a number from 0-100 to specify the max percent of pods to do chaos
                    action
                  type: string
              required:
              - mode
              - selector
              type: object
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. If `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
          required:
          - action
          - mode
          - selector
          type: object
        status:
          description: Most recently observed status of the chaos experiment about
            pods
          properties:
            experiment:
              description: Experiment records the last experiment state.
              properties:
                duration:
                  type: string
                endTime:
                  format: date-time
                  type: string
                phase:
                  description: ExperimentPhase is the current status of chaos experiment.
                  type: string
                podRecords:
                  items:
                    description: PodStatus represents information about the status
                      of a pod in chaos experiment.
                    properties:
                      action:
                        type: string
                      hostIP:
                        type: string
                      message:
                        description: A brief CamelCase message indicating details
                          about the chaos action. e.g. "delete this pod" or "pause
                          this pod duration 5m"
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      podIP:
                        type: string
                    required:
                    - action
                    - hostIP
                    - name
                    - namespace
                    - podIP
                    type: object
                  type: array
                reason:
                  type: string
                startTime:
                  format: date-time
                  type: string
              type: object
            failedMessage:
              type: string
            phase:
              description: Phase is the chaos status.
              type: string
            reason:
              type: string
            scheduler:
              description: ScheduleStatus is the current status of chaos scheduler.
              properties:
                nextRecover:
                  description: Next time when this action will be recovered
                  format: date-time
                  type: string
                nextStart:
                  description: Next time when this action will be applied again
                  format: date-time
                  type: string
              type: object
          required:
          - experiment
          - phase
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: podchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: PodChaos
    listKind: PodChaosList
    plural: podchaos
    singular: podchaos
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: PodChaos is the control script`s spec.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a pod chaos experiment
          properties:
            action:
              description: 'Action defines the specific pod chaos action. Supported
                action: pod-kill / pod-failure / container-kill Default action: pod-kill'
              enum:
              - pod-kill
              - pod-failure
              - container-kill
              type: string
            containerName:
              description: ContainerName indicates the name of the container. Needed
                in container-kill.
              type: string
            duration:
              description: Duration represents the duration of the chaos action. It
                is required when the action is `PodFailureAction`. A duration string
                is a possibly signed sequence of decimal numbers, each with optional
                fraction and a unit suffix, such as "300ms", "-1.5h" or "2h45m". Valid
                time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
              type: string
            gracePeriod:
              description: GracePeriod is used in pod-kill action. It represents the
                duration in seconds before the pod should be deleted. Value must be
                non-negative integer. The default value is zero that indicates delete
                immediately.
              format: int64
              minimum: 0
              type: integer
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            scheduler:
              description: Scheduler defines some schedule rules to control the running
                time of the chaos experiment about pods.
              properties:
                cron:
                  description: "Cron defines a cron job rule. \n Some rule examples:
                    \"0 30 * * * *\" means to \"Every hour on the half hour\" \"@hourly\"
                    \     means to \"Every hour\" \"@every 1h30m\" means to \"Every
                    hour thirty\" \n More rule info: https://godoc.org/github.com/robfig/cron"
                  type: string
              required:
              - cron
              type: object
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. IF `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
          required:
          - action
          - mode
          - selector
          type: object
        status:
          description: Most recently observed status of the chaos experiment about
            pods
          properties:
            experiment:
              description: Experiment records the last experiment state.
              properties:
                duration:
                  type: string
                endTime:
                  format: date-time
                  type: string
                phase:
                  description: ExperimentPhase is the current status of chaos experiment.
                  type: string
                podRecords:
                  items:
                    description: PodStatus represents information about the status
                      of a pod in chaos experiment.
                    properties:
                      action:
                        type: string
                      hostIP:
                        type: string
                      message:
                        description: A brief CamelCase message indicating details
                          about the chaos action. e.g. "delete this pod" or "pause
                          this pod duration 5m"
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      podIP:
                        type: string
                    required:
                    - action
                    - hostIP
                    - name
                    - namespace
                    - podIP
                    type: object
                  type: array
                reason:
                  type: string
                startTime:
                  format: date-time
                  type: string
              type: object
            failedMessage:
              type: string
            phase:
              description: Phase is the chaos status.
              type: string
            reason:
              type: string
            scheduler:
              description: ScheduleStatus is the current status of chaos scheduler.
              properties:
                nextRecover:
                  description: Next time when this action will be recovered
                  format: date-time
                  type: string
                nextStart:
                  description: Next time when this action will be applied again
                  format: date-time
                  type: string
              type: object
          required:
          - experiment
          - phase
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: podiochaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: PodIoChaos
    listKind: PodIoChaosList
    plural: podiochaos
    singular: podiochaos
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: PodIoChaos is the Schema for the podiochaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: PodIoChaosSpec defines the desired state of IoChaos
          properties:
            actions:
              description: Actions are a list of IoChaos actions
              items:
                description: IoChaosAction defines an possible action of IoChaos
                properties:
                  atime:
                    description: Timespec represents a time
                    properties:
                      nsec:
                        format: int64
                        type: integer
                      sec:
                        format: int64
                        type: integer
                    required:
                    - nsec
                    - sec
                    type: object
                  blocks:
                    format: int64
                    type: integer
                  ctime:
                    description: Timespec represents a time
                    properties:
                      nsec:
                        format: int64
                        type: integer
                      sec:
                        format: int64
                        type: integer
                    required:
                    - nsec
                    - sec
                    type: object
                  faults:
                    description: Faults represents the fault to inject
                    items:
                      description: IoFault represents the fault to inject and their
                        weight
                      properties:
                        errno:
                          format: int32
                          type: integer
                        weight:
                          format: int32
                          type: integer
                      required:
                      - errno
                      - weight
                      type: object
                    type: array
                  gid:
                    format: int32
                    type: integer
                  ino:
                    format: int64
                    type: integer
                  kind:
                    description: FileType represents type of a file
                    type: string
                  latency:
                    description: Latency represents the latency to inject
                    type: string
                  methods:
                    description: Methods represents the method that the action will
                      inject in
                    items:
                      type: string
                    type: array
                  mtime:
                    description: Timespec represents a time
                    properties:
                      nsec:
                        format: int64
                        type: integer
                      sec:
                        format: int64
                        type: integer
                    required:
                    - nsec
                    - sec
                    type: object
                  nlink:
                    format: int32
                    type: integer
                  path:
                    description: Path represents a glob of injecting path
                    type: string
                  percent:
                    description: Percent represents the percent probability of injecting
                      this action
                    type: integer
                  perm:
                    type: integer
                  rdev:
                    format: int32
                    type: integer
                  size:
                    format: int64
                    type: integer
                  source:
                    description: Source represents the source of current rules
                    type: string
                  type:
                    description: IoChaosType represents the type of an IoChaos Action
                    type: string
                  uid:
                    format: int32
                    type: integer
                required:
                - path
                - percent
                - type
                type: object
              type: array
            pid:
              description: Pid represents a running toda process id
              format: int64
              type: integer
            startTime:
              description: StartTime represents the start time of a toda process
              format: int64
              type: integer
            volumeMountPath:
              description: 'VolumeMountPath represents the target mount path It must
                be a root of mount path now. TODO: search the mount parent of any
                path automatically. TODO: support multiple different volume mount
                path in one pod'
              type: string
          required:
          - volumeMountPath
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: podnetworkchaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: PodNetworkChaos
    listKind: PodNetworkChaosList
    plural: podnetworkchaos
    singular: podnetworkchaos
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: PodNetworkChaos is the Schema for the PodNetworkChaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a pod chaos experiment
          properties:
            ipsets:
              description: The ipset on the pod
              items:
                description: RawIPSet represents an ipset on specific pod
                properties:
                  cidrs:
                    description: The contents of ipset
                    items:
                      type: string
                    type: array
                  name:
                    description: The name of ipset
                    type: string
                  source:
                    type: string
                required:
                - cidrs
                - name
                - source
                type: object
              type: array
            iptables:
              description: The iptables rules on the pod
              items:
                description: RawIptables represents the iptables rules on specific
                  pod
                properties:
                  direction:
                    description: The block direction of this iptables rule
                    type: string
                  ipsets:
                    description: The name of related ipset
                    items:
                      type: string
                    type: array
                  name:
                    description: The name of iptables chain
                    type: string
                  source:
                    type: string
                required:
                - direction
                - ipsets
                - name
                - source
                type: object
              type: array
            tcs:
              description: The tc rules on the pod
              items:
                description: RawTrafficControl represents the traffic control chaos
                  on specific pod
                properties:
                  bandwidth:
                    description: Bandwidth represents the detail about bandwidth control
                      action
                    properties:
                      buffer:
                        description: Buffer is the maximum amount of bytes that tokens
                          can be available for instantaneously.
                        format: int32
                        minimum: 1
                        type: integer
                      limit:
                        description: Limit is the number of bytes that can be queued
                          waiting for tokens to become available.
                        format: int32
                        minimum: 1
                        type: integer
                      minburst:
                        description: Minburst specifies the size of the peakrate bucket.
                          For perfect accuracy, should be set to the MTU of the interface.  If
                          a peakrate is needed, but some burstiness is acceptable,
                          this size can be raised. A 3000 byte minburst allows around
                          3mbit/s of peakrate, given 1000 byte packets.
                        format: int32
                        minimum: 0
                        type: integer
                      peakrate:
                        description: Peakrate is the maximum depletion rate of the
                          bucket. The peakrate does not need to be set, it is only
                          necessary if perfect millisecond timescale shaping is required.
                        format: int64
                        minimum: 0
                        type: integer
                      rate:
                        description: Rate is the speed knob. Allows bps, kbps, mbps,
                          gbps, tbps unit. bps means bytes per second.
                        type: string
                    required:
                    - buffer
                    - limit
                    - rate
                    type: object
                  corrupt:
                    description: Corrupt represents the detail about corrupt action
                    properties:
                      correlation:
                        type: string
                      corrupt:
                        type: string
                    required:
                    - correlation
                    - corrupt
                    type: object
                  delay:
                    description: Delay represents the detail about delay action
                    properties:
                      correlation:
                        type: string
                      jitter:
                        type: string
                      latency:
                        type: string
                      reorder:
                        description: ReorderSpec defines details of packet reorder.
                        properties:
                          correlation:
                            type: string
                          gap:
                            type: integer
                          reorder:
                            type: string
                        required:
                        - correlation
                        - gap
                        - reorder
                        type: object
                    required:
                    - latency
                    type: object
                  duplicate:
                    description: DuplicateSpec represents the detail about loss action
                    properties:
                      correlation:
                        type: string
                      duplicate:
                        type: string
                    required:
                    - correlation
                    - duplicate
                    type: object
                  ipset:
                    description: The name of target ipset
                    type: string
                  loss:
                    description: Loss represents the detail about loss action
                    properties:
                      correlation:
                        type: string
                      loss:
                        type: string
                    required:
                    - correlation
                    - loss
                    type: object
                  source:
                    description: The name and namespace of the source network chaos
                    type: string
                  type:
                    description: The type of traffic control
                    type: string
                required:
                - source
                - type
                type: object
              type: array
          type: object
        status:
          description: Most recently observed status of the chaos experiment about
            pods
          properties:
            experiment:
              description: Experiment records the last experiment state.
              properties:
                duration:
                  type: string
                endTime:
                  format: date-time
                  type: string
                phase:
                  description: ExperimentPhase is the current status of chaos experiment.
                  type: string
                podRecords:
                  items:
                    description: PodStatus represents information about the status
                      of a pod in chaos experiment.
                    properties:
                      action:
                        type: string
                      hostIP:
                        type: string
                      message:
                        description: A brief CamelCase message indicating details
                          about the chaos action. e.g. "delete this pod" or "pause
                          this pod duration 5m"
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      podIP:
                        type: string
                    required:
                    - action
                    - hostIP
                    - name
                    - namespace
                    - podIP
                    type: object
                  type: array
                reason:
                  type: string
                startTime:
                  format: date-time
                  type: string
              type: object
            failedMessage:
              type: string
            phase:
              description: Phase is the chaos status.
              type: string
            reason:
              type: string
            scheduler:
              description: ScheduleStatus is the current status of chaos scheduler.
              properties:
                nextRecover:
                  description: Next time when this action will be recovered
                  format: date-time
                  type: string
                nextStart:
                  description: Next time when this action will be applied again
                  format: date-time
                  type: string
              type: object
          required:
          - experiment
          - phase
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: stresschaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: StressChaos
    listKind: StressChaosList
    plural: stresschaos
    singular: stresschaos
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: StressChaos is the Schema for the stresschaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a time chaos experiment
          properties:
            containerName:
              description: ContainerName indicates the target container to inject
                stress in
              type: string
            duration:
              description: Duration represents the duration of the chaos action
              type: string
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              type: string
            scheduler:
              description: Scheduler defines some schedule rules to control the running
                time of the chaos experiment about time.
              properties:
                cron:
                  description: "Cron defines a cron job rule. \n Some rule examples:
                    \"0 30 * * * *\" means to \"Every hour on the half hour\" \"@hourly\"
                    \     means to \"Every hour\" \"@every 1h30m\" means to \"Every
                    hour thirty\" \n More rule info: https://godoc.org/github.com/robfig/cron"
                  type: string
              required:
              - cron
              type: object
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            stressngStressors:
              description: StressngStressors defines plenty of stressors just like
                `Stressors` except that it's an experimental feature and more powerful.
                You can define stressors in `stress-ng` (see also `man stress-ng`)
                dialect, however not all of the supported stressors are well tested.
                It maybe retired in later releases. You should always use `Stressors`
                to define the stressors and use this only when you want more stressors
                unsupported by `Stressors`. When both `StressngStressors` and `Stressors`
                are defined, `StressngStressors` wins.
              type: string
            stressors:
              description: Stressors defines plenty of stressors supported to stress
                system components out. You can use one or more of them to make up
                various kinds of stresses. At least one of the stressors should be
                specified.
              properties:
                cpu:
                  description: CPUStressor stresses CPU out
                  properties:
                    load:
                      description: Load specifies P percent loading per CPU worker.
                        0 is effectively a sleep (no load) and 100 is full loading.
                      type: integer
                    options:
                      description: extend stress-ng options
                      items:
                        type: string
                      type: array
                    workers:
                      description: Workers specifies N workers to apply the stressor.
                      type: integer
                  required:
                  - workers
                  type: object
                memory:
                  description: MemoryStressor stresses virtual memory out
                  properties:
                    options:
                      description: extend stress-ng options
                      items:
                        type: string
                      type: array
                    workers:
                      description: Workers specifies N workers to apply the stressor.
                      type: integer
                  required:
                  - workers
                  type: object
              type: object
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the max % of pods the server
                can do chaos action. If `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the % of pods to do chaos action
              type: string
          required:
          - mode
          - selector
          type: object
        status:
          description: Most recently observed status of the time chaos experiment
          properties:
            experiment:
              description: Experiment records the last experiment state.
              properties:
                duration:
                  type: string
                endTime:
                  format: date-time
                  type: string
                phase:
                  description: ExperimentPhase is the current status of chaos experiment.
                  type: string
                podRecords:
                  items:
                    description: PodStatus represents information about the status
                      of a pod in chaos experiment.
                    properties:
                      action:
                        type: string
                      hostIP:
                        type: string
                      message:
                        description: A brief CamelCase message indicating details
                          about the chaos action. e.g. "delete this pod" or "pause
                          this pod duration 5m"
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      podIP:
                        type: string
                    required:
                    - action
                    - hostIP
                    - name
                    - namespace
                    - podIP
                    type: object
                  type: array
                reason:
                  type: string
                startTime:
                  format: date-time
                  type: string
              type: object
            failedMessage:
              type: string
            instances:
              additionalProperties:
                description: StressInstance is an instance generates stresses
                properties:
                  startTime:
                    description: StartTime specifies when the instance starts
                    format: date-time
                    type: string
                  uid:
                    description: UID is the instance identifier
                    type: string
                type: object
              description: Instances always specifies stressing instances
              type: object
            phase:
              description: Phase is the chaos status.
              type: string
            reason:
              type: string
            scheduler:
              description: ScheduleStatus is the current status of chaos scheduler.
              properties:
                nextRecover:
                  description: Next time when this action will be recovered
                  format: date-time
                  type: string
                nextStart:
                  description: Next time when this action will be applied again
                  format: date-time
                  type: string
              type: object
          required:
          - experiment
          - phase
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: timechaos.chaos-mesh.org
spec:
  group: chaos-mesh.org
  names:
    kind: TimeChaos
    listKind: TimeChaosList
    plural: timechaos
    singular: timechaos
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: TimeChaos is the Schema for the timechaos API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec defines the behavior of a time chaos experiment
          properties:
            clockIds:
              description: ClockIds defines all affected clock id All available options
                are ["CLOCK_REALTIME","CLOCK_MONOTONIC","CLOCK_PROCESS_CPUTIME_ID","CLOCK_THREAD_CPUTIME_ID",
                "CLOCK_MONOTONIC_RAW","CLOCK_REALTIME_COARSE","CLOCK_MONOTONIC_COARSE","CLOCK_BOOTTIME","CLOCK_REALTIME_ALARM",
                "CLOCK_BOOTTIME_ALARM"] Default value is ["CLOCK_REALTIME"]
              items:
                type: string
              type: array
            containerNames:
              description: ContainerName indicates the name of affected container.
                If not set, all containers will be injected
              items:
                type: string
              type: array
            duration:
              description: Duration represents the duration of the chaos action
              type: string
            mode:
              description: 'Mode defines the mode to run chaos action. Supported mode:
                one / all / fixed / fixed-percent / random-max-percent'
              enum:
              - one
              - all
              - fixed
              - fixed-percent
              - random-max-percent
              type: string
            scheduler:
              description: Scheduler defines some schedule rules to control the running
                time of the chaos experiment about time.
              properties:
                cron:
                  description: "Cron defines a cron job rule. \n Some rule examples:
                    \"0 30 * * * *\" means to \"Every hour on the half hour\" \"@hourly\"
                    \     means to \"Every hour\" \"@every 1h30m\" means to \"Every
                    hour thirty\" \n More rule info: https://godoc.org/github.com/robfig/cron"
                  type: string
              required:
              - cron
              type: object
            selector:
              description: Selector is used to select pods that are used to inject
                chaos action.
              properties:
                annotationSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on annotations.
                  type: object
                fieldSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on fields.
                  type: object
                labelSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    objects. A selector based on labels.
                  type: object
                namespaces:
                  description: Namespaces is a set of namespace to which objects belong.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to select
                    nodes. Selector which must match a node's labels, and objects
                    must belong to these selected nodes.
                  type: object
                nodes:
                  description: Nodes is a set of node name and objects must belong
                    to these nodes.
                  items:
                    type: string
                  type: array
                podPhaseSelectors:
                  description: 'PodPhaseSelectors is a set of condition of a pod at
                    the current time. supported value: Pending / Running / Succeeded
                    / Failed / Unknown'
                  items:
                    type: string
                  type: array
                pods:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Pods is a map of string keys and a set values that
                    used to select pods. The key defines the namespace which pods
                    belong, and the each values is a set of pod names.
                  type: object
              type: object
            timeOffset:
              description: TimeOffset defines the delta time of injected program.
                It's a possibly signed sequence of decimal numbers, such as "300ms",
                "-1.5h" or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms",
                "s", "m", "h".
              type: string
            value:
              description: Value is required when the mode is set to `FixedPodMode`
                / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                provide a number from 0-100 to specify the percent of pods the server
                can do chaos action. If `RandomMaxPercentPodMod`,  provide a number
                from 0-100 to specify the max percent of pods to do chaos action
              type: string
          required:
          - mode
          - selector
          - timeOffset
          type: object
        status:
          description: Most recently observed status of the time chaos experiment
          properties:
            experiment:
              description: Experiment records the last experiment state.
              properties:
                duration:
                  type: string
                endTime:
                  format: date-time
                  type: string
                phase:
                  description: ExperimentPhase is the current status of chaos experiment.
                  type: string
                podRecords:
                  items:
                    description: PodStatus represents information about the status
                      of a pod in chaos experiment.
                    properties:
                      action:
                        type: string
                      hostIP:
                        type: string
                      message:
                        description: A brief CamelCase message indicating details
                          about the chaos action. e.g. "delete this pod" or "pause
                          this pod duration 5m"
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      podIP:
                        type: string
                    required:
                    - action
                    - hostIP
                    - name
                    - namespace
                    - podIP
                    type: object
                  type: array
                reason:
                  type: string
                startTime:
                  format: date-time
                  type: string
              type: object
            failedMessage:
              type: string
            phase:
              description: Phase is the chaos status.
              type: string
            reason:
              type: string
            scheduler:
              description: ScheduleStatus is the current status of chaos scheduler.
              properties:
                nextRecover:
                  description: Next time when this action will be recovered
                  format: date-time
                  type: string
                nextStart:
                  description: Next time when this action will be applied again
                  format: date-time
                  type: string
              type: object
          required:
          - experiment
          - phase
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
