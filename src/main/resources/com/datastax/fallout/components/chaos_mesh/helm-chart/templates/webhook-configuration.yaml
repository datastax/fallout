{{- $altNames := list ( printf "%s.%s.svc" (include "chaos-mesh.svc" .) .Release.Namespace )  }}
{{- $ca := genCA "chaos-mesh-ca" 1825 }}
{{- $cert := genSignedCert "chaos-mesh-ca" nil $altNames 1825 $ca }}
{{- $certEnabled := .Values.webhook.certManager.enabled }}
{{- $crtPEM := .Values.webhook.crtPEM }}
{{- $keyPEM := .Values.webhook.keyPEM }}
{{- if not $certEnabled }}
kind: Secret
apiVersion: v1
metadata:
  name: {{ template "chaos-mesh.certs" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ template "chaos-mesh.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: webhook-secret
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+"  "_" }}
type: Opaque
data:
  tls.crt: {{ ternary (b64enc $cert.Cert) (b64enc (trim $crtPEM)) (empty $crtPEM) }}
  tls.key: {{ ternary (b64enc $cert.Key) (b64enc (trim $keyPEM)) (empty $keyPEM) }}
{{- end }}

---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ template "chaos-mesh.mutation" . }}
  labels:
    app.kubernetes.io/name: {{ template "chaos-mesh.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: admission-webhook
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+"  "_" }}
  {{- if $certEnabled }}
  annotations:
    cert-manager.io/inject-ca-from: {{ printf "%s/%s" .Release.Namespace "chaos-mesh-cert" | quote }}
  {{- end }}
webhooks:
  - name: {{ template "chaos-mesh.webhook" . }}
    clientConfig:
      {{- if $certEnabled }}
      caBundle: Cg==
      {{- else }}
      caBundle: {{ ternary (b64enc $ca.Cert) (b64enc (trim $crtPEM)) (empty $crtPEM) }}
      {{- end }}
      service:
        name: {{ template "chaos-mesh.svc" . }}
        namespace: {{ .Release.Namespace }}
        path: "/inject-v1-pod"
    rules:
      - operations: [ "CREATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    namespaceSelector:
      matchLabels:
        admission-webhook: enabled
    failurePolicy: {{ .Values.webhook.FailurePolicy }}
  {{- range $crd := .Values.webhook.CRDS }}
  - clientConfig:
      {{- if $certEnabled }}
      caBundle: Cg==
      {{- else }}
      caBundle: {{ ternary (b64enc $ca.Cert) (b64enc (trim $crtPEM)) (empty $crtPEM) }}
      {{- end }}
      service:
        name: {{ template "chaos-mesh.svc" $ }}
        namespace: {{ $.Release.Namespace }}
        path: /mutate-chaos-mesh-org-v1alpha1-{{ $crd }}
    failurePolicy: Fail
    name: m{{ $crd }}.kb.io
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - {{ $crd }}
  {{- end }}
---

apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: {{ template "chaos-mesh.validation" . }}
  labels:
    app.kubernetes.io/name: {{ template "chaos-mesh.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: admission-webhook
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+"  "_" }}
  {{- if $certEnabled }}
  annotations:
    cert-manager.io/inject-ca-from: {{ printf "%s/%s" .Release.Namespace "chaos-mesh-cert" | quote }}
  {{- end }}
webhooks:
  {{- range $crd := .Values.webhook.CRDS }}
  {{- if ne $crd "podiochaos" }}
  - clientConfig:
      {{- if $certEnabled }}
      caBundle: Cg==
      {{- else }}
      caBundle: {{ ternary (b64enc $ca.Cert) (b64enc (trim $crtPEM)) (empty $crtPEM) }}
      {{- end }}
      service:
        name: {{ template "chaos-mesh.svc" $ }}
        namespace: {{ $.Release.Namespace }}
        path: /validate-chaos-mesh-org-v1alpha1-{{ $crd }}
    failurePolicy: Fail
    name: v{{ $crd }}.kb.io
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - {{ $crd }}
  {{- end }}
  {{- end }}

{{- if $certEnabled }}
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: chaos-mesh-selfsigned
  namespace: {{ .Release.Namespace }}
spec:
  selfSigned: {}

---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: chaos-mesh-cert
  namespace: {{ .Release.Namespace }}
spec:
  duration: 43800h #5year
  dnsNames:
    - {{ template "chaos-mesh.svc" . }}
    - {{ template "chaos-mesh.svc" . }}.{{ .Release.Namespace }}
    - {{ template "chaos-mesh.svc" . }}.{{ .Release.Namespace }}.svc
  secretName: {{ template "chaos-mesh.certs" . }}
  issuerRef:
    name: chaos-mesh-selfsigned
{{- end }}
